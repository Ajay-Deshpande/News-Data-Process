services:
  python-producer:
    build: ./producer
    depends_on:
      - kafka
      - mongodb
    networks:
      - app_network
    restart: on-failure
    entrypoint: ["/bin/sh", "-c", "sleep 10 && python news_scraper.py"]

  python-consumer:
    build: ./consumer
    depends_on:
      - kafka
      - mongodb
    env_file:
      - .env
    networks:
      - app_network
    restart: on-failure
    entrypoint: ["/bin/sh", "-c", "sleep 20 && python news_processor.py"]

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app_network
    volumes:
      - mongo_data:/data/db

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
